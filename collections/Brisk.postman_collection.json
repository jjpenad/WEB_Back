{
	"info": {
		"_postman_id": "280cd0ce-5a04-4683-919b-bfd07655698c",
		"name": "Brisk",
		"description": "This collection contains all API tests for the Brisk Backend application",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Create new User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var json = pm.response.json()\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.globals.set(\"newUser_id\",json._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"uid\":\"abc123456789\",\r\n    \"email\":\"prueba@brisk.one\",\r\n\t\"nickname\":\"Pepe\",\r\n\t\"firstName\": \"Carlos\",\r\n    \"lastName\": \"Perez\",\r\n\t\"avatar\":\"https://dev.bm3group.com/demo/img_avatar3.png\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/users",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "All users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var json = pm.response.json()\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Number of users > 0\", function(){\r",
									"    pm.expect(json.length).to.greaterThan(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/users",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "User By ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/users/{{newUser_id}}",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"users",
								"{{newUser_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"update@brisk.one\",\r\n\t\"nickname\":\"BuÃ±uelo\",\r\n\t\"firstName\": \"Carlos\",\r\n    \"lastName\": \"Perez\",\r\n\t\"avatar\":\"https://dev.bm3group.com/demo/img_avatar3.png\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/users/{{newUser_id}}",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"users",
								"{{newUser_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete new user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/users/{{newUser_id}}",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"users",
								"{{newUser_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Organization",
			"item": [
				{
					"name": "Create new Organization",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var json = pm.response.json()\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.globals.set(\"newOrg_id\",json._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Enterprise\",\r\n    \"logo\":\"https://www.southpointcollision.com/wp-content/uploads/2019/10/enterprise-logo.jpg\",\r\n    \"task_status\":[\"Done\",\"Pending\"],\r\n    \"schedule\":[\"Tues\", \"Thurs\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/orgs",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"orgs"
							]
						}
					},
					"response": []
				},
				{
					"name": "All Organizations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var json = pm.response.json()\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Number of organizations > 0\", function(){\r",
									"    pm.expect(json.length).to.greaterThan(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/orgs",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"orgs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Organization By ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/orgs/{{newOrg_id}}",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"orgs",
								"{{newOrg_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Organization",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Enterprise\",\r\n    \"logo\":\"https://www.southpointcollision.com/wp-content/uploads/2019/10/enterprise-logo.jpg\",\r\n    \"task_status\":[\"Done\",\"Pending\", \"New\"],\r\n    \"schedule\":[\"Tues\", \"Fri\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/orgs/{{newOrg_id}}",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"orgs",
								"{{newOrg_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete new Organization",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/orgs/{{newOrg_id}}",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"orgs",
								"{{newOrg_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Gitlab",
			"item": [
				{
					"name": "Create new User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var json = pm.response.json()\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.globals.set(\"newUser_id\",json._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"uid\":\"abc123456789\",\r\n    \"email\":\"prueba@brisk.one\",\r\n\t\"nickname\":\"Pepe\",\r\n\t\"firstName\": \"Carlos\",\r\n    \"lastName\": \"Perez\",\r\n\t\"avatar\":\"https://dev.bm3group.com/demo/img_avatar3.png\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/users",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new GitlabIntegration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var json = pm.response.json()\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.globals.set(\"newUser_token_gitlab\", json.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\":\"{{newUser_id}}\",\r\n    \"gitlab_username\":\"jj.penad\",\r\n    \"token\":\"znAd3TzUbyWwBuABz-MP\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/users/{{newUser_id}}/gitlab",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"users",
								"{{newUser_id}}",
								"gitlab"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user's gitlab projects",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/users/{{newUser_id}}/gitlab/projects",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"users",
								"{{newUser_id}}",
								"gitlab",
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update integration of user by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\":\"{{newUser_id}}\",\r\n    \"gitlab_username\":\"jj.penad\",\r\n    \"token\":\"{{newUser_token_gitlab}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/users/{{newUser_id}}/gitlab",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"users",
								"{{newUser_id}}",
								"gitlab"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete new Gitlab Integration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/users/{{newUser_id}}/gitlab",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"users",
								"{{newUser_id}}",
								"gitlab"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete new User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/users/{{newUser_id}}",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"users",
								"{{newUser_id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}